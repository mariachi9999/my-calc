{"version":3,"sources":["components/Keyboard/Keyboard.module.css","components/Navbar/Navbar.module.css","components/Button/Button.module.css","components/Navbar/Navbar.jsx","components/Button/Button.jsx","data/buttons.js","data/operations.js","components/Keyboard/Keyboard.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","fondo","setFondo","className","styles","navbar","Button","symbol","color","setOperando","setOperator","operation","setFloat","float","onClick","e","console","log","target","id","Number","isInteger","parseInt","name","operando","parseFloat","toString","concat","symbols","operations","a","b","Math","sqrt","Keyboard","useState","resultado","setResultado","operator","storedoperator","setStoreoperator","setOperation","useEffect","includes","new_result","gridContainer","result","map","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.be489165.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"operation\":\"Keyboard_operation__2P4hG\",\"result\":\"Keyboard_result__1QFlf\",\"gridContainer\":\"Keyboard_gridContainer__3ITUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2P_jn\",\"button\":\"Navbar_button__16k7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"Button_light__2Dbia\",\"dark\":\"Button_dark__3QFzE\"};","import React from 'react'\r\nimport styles from './Navbar.module.css'\r\n\r\nconst Navbar = ({fondo, setFondo}) => {\r\n\r\n  return (\r\n    <div className={styles.navbar}>\r\n      <h4>My Calculator 🦸‍♂️</h4>\r\n      <button>Button</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import styles from \"./Button.module.css\"\r\n\r\nconst Button = ({symbol, color, setOperando, setOperator, operation, setFloat, float}) => {\r\n\r\n  \r\n  const handleClick= (e)=>{\r\n    \r\n    console.log(e.target.id)\r\n\r\n    Number.isInteger(parseInt(e.target.name)) && setOperando((operando)=>parseFloat(operando.toString().concat(float,e.target.name)))\r\n\r\n    !Number.isInteger(parseInt(e.target.name)) && e.target.id !==\"to_float\" && setOperator(e.target.id)\r\n\r\n    !Number.isInteger(parseInt(e.target.name)) && e.target.id ===\"to_float\" && float===\"\" && setFloat(\".\") \r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button className={styles[`${color}`]} onClick={handleClick} name={symbol} id={operation}>{symbol}</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","const symbols = [\r\n  { symbol: \"%\", operation: \"percentage\" },\r\n  { symbol: \"CE\", operation: \"delete_result1\" },\r\n  { symbol: \"C\", operation: \"delete_result2\" },\r\n  { symbol: \"Del\", operation: \"delete_result3\" },\r\n  { symbol: \".1/x\", operation: \"divide_itself\" },\r\n  { symbol: \"x²\", operation: \"power_squared\" },\r\n  { symbol: \"√2\", operation: \"square_root\" },\r\n  { symbol: \"/\", operation: \"divide\" },\r\n  { symbol: 7, operation: \"seven\" },\r\n  { symbol: 8, operation: \"eight\" },\r\n  { symbol: 9, operation: \"nine\" },\r\n  { symbol: \"X\", operation: \"multiply\" },\r\n  { symbol: 4, operation: \"four\" },\r\n  { symbol: 5, operation: \"five\" },\r\n  { symbol: 6, operation: \"six\" },\r\n  { symbol: \"-\", operation: \"rest\" },\r\n  { symbol: 1, operation: \"one\" },\r\n  { symbol: 2, operation: \"two\" },\r\n  { symbol: 3, operation: \"three\" },\r\n  { symbol: \"+\", operation: \"add\" },\r\n  { symbol: \"±\", operation: \"plus_minus\" },\r\n  { symbol: 0, operation: \"zero\" },\r\n  { symbol: \".\", operation: \"to_float\" },\r\n  { symbol: \"=\", operation: \"equal\" },\r\n];\r\n\r\nexport default function data() {\r\n  return symbols;\r\n}\r\n","const operations = {\r\n  \"percentage\" : (a)=> a/100,\r\n  \"delete_result1\": (a)=>a=0,\r\n  \"delete_result2\": (a)=>a=0,\r\n  \"delete_result3\": (a,b)=>{return a=b=0},\r\n  \"divide_itself\": (a)=>1/a,\r\n  \"power_squared\": (a)=>a**a,\r\n  \"square_root\": (a)=>Math.sqrt(a),\r\n  \"divide\": (a,b)=>a/b,\r\n  \"multiply\": (a,b)=>a*b,\r\n  \"rest\": (a,b)=>a-b,\r\n  \"add\": (a,b)=>a+b,\r\n  \"plus_minus\": (a)=>a*(-1),\r\n  \"to_float\": (a)=> Number.isInteger(a) ? parseFloat(`${a}.`) : a ,\r\n}\r\n\r\nexport default function formulas(){return operations}","import { useState, useEffect } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport styles from \"./Keyboard.module.css\";\r\nimport data from \"../../data/buttons\";\r\nimport formulas from \"../../data/operations\";\r\n\r\nconst Keyboard = () => {\r\n  const symbols = data();\r\n  const operations = formulas();\r\n\r\n  const [resultado, setResultado] = useState(0);\r\n  const [operando, setOperando] = useState(0);\r\n  const [operator, setOperator] = useState(\"\");\r\n  const [storedoperator, setStoreoperator] = useState(\"\");\r\n  const [operation, setOperation] = useState(\"\");\r\n  const [float, setFloat] = useState(\"\")\r\n\r\n\r\n  useEffect(() => {\r\n    if (operator === \"plus_minus\") {\r\n      if (operando !== 0) {\r\n        setOperando(operando * -1);\r\n        setOperator(\"\");\r\n      }\r\n\r\n      if (operando === 0 && resultado !== 0) {\r\n        setResultado(resultado * -1);\r\n        setOperator(\"\");\r\n      }\r\n    } else if (operator === \"percentage\") {\r\n      if (operando !== 0) {\r\n        setOperando(operando / 100);\r\n        setResultado(operando / 100);\r\n        setOperator(\"\");\r\n      }\r\n\r\n      if (operando === 0 && resultado !== 0) {\r\n        setResultado(resultado / 100);\r\n        setOperator(\"\");\r\n      }\r\n    } else if (operator === \"divide_itself\") {\r\n      if (operando !== 0) {\r\n        setOperando(1 / operando);\r\n        setResultado(operando / 100);\r\n        setOperator(\"\");\r\n      }\r\n\r\n      if (operando === 0 && resultado !== 0) {\r\n        setResultado(1 / resultado);\r\n        setOperator(\"\");\r\n      }\r\n    } else if (operator === \"power_squared\") {\r\n      if (operando !== 0) {\r\n        setOperando(operando * operando);\r\n        setResultado(operando * operando);\r\n        setOperator(\"\");\r\n      }\r\n\r\n      if (operando === 0 && resultado !== 0) {\r\n        setResultado(resultado * resultado);\r\n        setOperator(\"\");\r\n      }\r\n    } else if (operator === \"square_root\") {\r\n      if (operando !== 0) {\r\n        setOperando(Math.sqrt(operando));\r\n        setResultado(Math.sqrt(operando));\r\n        setOperator(\"\");\r\n      }\r\n\r\n      if (operando === 0 && resultado !== 0) {\r\n        setResultado(Math.sqrt(resultado));\r\n        setOperator(\"\");\r\n      }\r\n    } else {\r\n      if (operator && operator.includes(\"delete\")) {\r\n        console.log(\"incluye\");\r\n        setResultado(0);\r\n        setOperando(0);\r\n        setOperator(0);\r\n        setStoreoperator(0);\r\n        setOperation(\"\");\r\n        setFloat(\"\")\r\n      } else {\r\n        if (operator === \"equal\") {\r\n          let new_result = resultado + operando;\r\n          setOperation(\r\n            `${resultado} ${storedoperator} ${operando} ${operator} ${new_result}`\r\n          );\r\n          setResultado(new_result);\r\n          setOperando(0);\r\n          setStoreoperator(\"\");\r\n          setOperator(\"\");\r\n          setFloat(\"\")\r\n        }\r\n\r\n        if (operator !== \"\") {\r\n          if (resultado === 0) {\r\n            setResultado(operando);\r\n            setOperando(0);\r\n            setStoreoperator(operator);\r\n            setOperator(\"\");\r\n            setFloat(\"\")\r\n\r\n          } else {\r\n            if (storedoperator) {\r\n              let new_result = operations[storedoperator](resultado, operando);\r\n              setResultado(new_result);\r\n              setOperando(0);\r\n              setStoreoperator(operator);\r\n              setOperator(\"\");\r\n              setFloat(\"\")\r\n\r\n            }\r\n            setStoreoperator(operator);\r\n            setOperator(\"\");\r\n            setFloat(\"\")\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [operator]);\r\n\r\n  useEffect(() => {\r\n    if (storedoperator === \"equal\") {\r\n      setStoreoperator(\"\");\r\n    }\r\n  }, [storedoperator]);\r\n\r\n\r\n  return (\r\n    <div className={styles.gridContainer}>\r\n      <button className={styles.operation}>\r\n        {operation ? operation : resultado > 0 ? resultado : \"\"}\r\n      </button>\r\n      <button className={styles.result}>\r\n        {operando ? operando : resultado}\r\n      </button>\r\n      {symbols.map((symbol) => (\r\n        <Button\r\n          key={symbol.operation}\r\n          setOperando={setOperando}\r\n          setOperator={setOperator}\r\n          symbol={symbol.symbol}\r\n          operation={symbol.operation}\r\n          color={\r\n            Number.isInteger(symbol.symbol) ||\r\n            symbol.symbol === \"±\" ||\r\n            symbol.symbol === \".\"\r\n              ? \"light\"\r\n              : \"dark\"\r\n          }\r\n          setFloat={setFloat}\r\n          float={float}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar'\nimport Keyboard from './components/Keyboard/Keyboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Keyboard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}